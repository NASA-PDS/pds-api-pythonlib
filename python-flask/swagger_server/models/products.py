# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.product import Product  # noqa: F401,E501
from swagger_server.models.summary import Summary  # noqa: F401,E501
from swagger_server import util


class Products(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, summary: Summary=None, data: List[Product]=None):  # noqa: E501
        """Products - a model defined in Swagger

        :param summary: The summary of this Products.  # noqa: E501
        :type summary: Summary
        :param data: The data of this Products.  # noqa: E501
        :type data: List[Product]
        """
        self.swagger_types = {
            'summary': Summary,
            'data': List[Product]
        }

        self.attribute_map = {
            'summary': 'summary',
            'data': 'data'
        }
        self._summary = summary
        self._data = data

    @classmethod
    def from_dict(cls, dikt) -> 'Products':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The products of this Products.  # noqa: E501
        :rtype: Products
        """
        return util.deserialize_model(dikt, cls)

    @property
    def summary(self) -> Summary:
        """Gets the summary of this Products.


        :return: The summary of this Products.
        :rtype: Summary
        """
        return self._summary

    @summary.setter
    def summary(self, summary: Summary):
        """Sets the summary of this Products.


        :param summary: The summary of this Products.
        :type summary: Summary
        """
        if summary is None:
            raise ValueError("Invalid value for `summary`, must not be `None`")  # noqa: E501

        self._summary = summary

    @property
    def data(self) -> List[Product]:
        """Gets the data of this Products.


        :return: The data of this Products.
        :rtype: List[Product]
        """
        return self._data

    @data.setter
    def data(self, data: List[Product]):
        """Sets the data of this Products.


        :param data: The data of this Products.
        :type data: List[Product]
        """

        self._data = data
