# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Reference(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, title: str=None, id: str=None, href: str=None, type: str=None, description: str=None):  # noqa: E501
        """Reference - a model defined in Swagger

        :param title: The title of this Reference.  # noqa: E501
        :type title: str
        :param id: The id of this Reference.  # noqa: E501
        :type id: str
        :param href: The href of this Reference.  # noqa: E501
        :type href: str
        :param type: The type of this Reference.  # noqa: E501
        :type type: str
        :param description: The description of this Reference.  # noqa: E501
        :type description: str
        """
        self.swagger_types = {
            'title': str,
            'id': str,
            'href': str,
            'type': str,
            'description': str
        }

        self.attribute_map = {
            'title': 'title',
            'id': 'id',
            'href': 'href',
            'type': 'type',
            'description': 'description'
        }
        self._title = title
        self._id = id
        self._href = href
        self._type = type
        self._description = description

    @classmethod
    def from_dict(cls, dikt) -> 'Reference':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The reference of this Reference.  # noqa: E501
        :rtype: Reference
        """
        return util.deserialize_model(dikt, cls)

    @property
    def title(self) -> str:
        """Gets the title of this Reference.

        name to display for the external reference  # noqa: E501

        :return: The title of this Reference.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title: str):
        """Sets the title of this Reference.

        name to display for the external reference  # noqa: E501

        :param title: The title of this Reference.
        :type title: str
        """

        self._title = title

    @property
    def id(self) -> str:
        """Gets the id of this Reference.

        external reference, here lidvid urn  # noqa: E501

        :return: The id of this Reference.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Reference.

        external reference, here lidvid urn  # noqa: E501

        :param id: The id of this Reference.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def href(self) -> str:
        """Gets the href of this Reference.

        external reference url of the current reference resolvable by the current API server, http://pds.nasa.gov/api/products/urn:nasa...  # noqa: E501

        :return: The href of this Reference.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href: str):
        """Sets the href of this Reference.

        external reference url of the current reference resolvable by the current API server, http://pds.nasa.gov/api/products/urn:nasa...  # noqa: E501

        :param href: The href of this Reference.
        :type href: str
        """

        self._href = href

    @property
    def type(self) -> str:
        """Gets the type of this Reference.

        type of the external reference, can be displayed as an icon for example  # noqa: E501

        :return: The type of this Reference.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this Reference.

        type of the external reference, can be displayed as an icon for example  # noqa: E501

        :param type: The type of this Reference.
        :type type: str
        """

        self._type = type

    @property
    def description(self) -> str:
        """Gets the description of this Reference.

        longer description for the external reference, can be displayed in a tooltip  # noqa: E501

        :return: The description of this Reference.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description: str):
        """Sets the description of this Reference.

        longer description for the external reference, can be displayed in a tooltip  # noqa: E501

        :param description: The description of this Reference.
        :type description: str
        """

        self._description = description
