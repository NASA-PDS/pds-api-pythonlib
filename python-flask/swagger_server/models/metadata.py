# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Metadata(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, creation_date_time: str=None, update_date_time: str=None, version: str=None, label_url: str=None, label_xml: str=None):  # noqa: E501
        """Metadata - a model defined in Swagger

        :param creation_date_time: The creation_date_time of this Metadata.  # noqa: E501
        :type creation_date_time: str
        :param update_date_time: The update_date_time of this Metadata.  # noqa: E501
        :type update_date_time: str
        :param version: The version of this Metadata.  # noqa: E501
        :type version: str
        :param label_url: The label_url of this Metadata.  # noqa: E501
        :type label_url: str
        :param label_xml: The label_xml of this Metadata.  # noqa: E501
        :type label_xml: str
        """
        self.swagger_types = {
            'creation_date_time': str,
            'update_date_time': str,
            'version': str,
            'label_url': str,
            'label_xml': str
        }

        self.attribute_map = {
            'creation_date_time': 'creation_date_time',
            'update_date_time': 'update_date_time',
            'version': 'version',
            'label_url': 'label_url',
            'label_xml': 'label_xml'
        }
        self._creation_date_time = creation_date_time
        self._update_date_time = update_date_time
        self._version = version
        self._label_url = label_url
        self._label_xml = label_xml

    @classmethod
    def from_dict(cls, dikt) -> 'Metadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The metadata of this Metadata.  # noqa: E501
        :rtype: Metadata
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_date_time(self) -> str:
        """Gets the creation_date_time of this Metadata.


        :return: The creation_date_time of this Metadata.
        :rtype: str
        """
        return self._creation_date_time

    @creation_date_time.setter
    def creation_date_time(self, creation_date_time: str):
        """Sets the creation_date_time of this Metadata.


        :param creation_date_time: The creation_date_time of this Metadata.
        :type creation_date_time: str
        """

        self._creation_date_time = creation_date_time

    @property
    def update_date_time(self) -> str:
        """Gets the update_date_time of this Metadata.


        :return: The update_date_time of this Metadata.
        :rtype: str
        """
        return self._update_date_time

    @update_date_time.setter
    def update_date_time(self, update_date_time: str):
        """Sets the update_date_time of this Metadata.


        :param update_date_time: The update_date_time of this Metadata.
        :type update_date_time: str
        """

        self._update_date_time = update_date_time

    @property
    def version(self) -> str:
        """Gets the version of this Metadata.


        :return: The version of this Metadata.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version: str):
        """Sets the version of this Metadata.


        :param version: The version of this Metadata.
        :type version: str
        """

        self._version = version

    @property
    def label_url(self) -> str:
        """Gets the label_url of this Metadata.


        :return: The label_url of this Metadata.
        :rtype: str
        """
        return self._label_url

    @label_url.setter
    def label_url(self, label_url: str):
        """Sets the label_url of this Metadata.


        :param label_url: The label_url of this Metadata.
        :type label_url: str
        """
        if label_url is None:
            raise ValueError("Invalid value for `label_url`, must not be `None`")  # noqa: E501

        self._label_url = label_url

    @property
    def label_xml(self) -> str:
        """Gets the label_xml of this Metadata.


        :return: The label_xml of this Metadata.
        :rtype: str
        """
        return self._label_xml

    @label_xml.setter
    def label_xml(self, label_xml: str):
        """Sets the label_xml of this Metadata.


        :param label_xml: The label_xml of this Metadata.
        :type label_xml: str
        """

        self._label_xml = label_xml
