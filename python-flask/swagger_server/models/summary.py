# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Summary(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, q: str=None, start: int=None, limit: int=None, sort: List[str]=None):  # noqa: E501
        """Summary - a model defined in Swagger

        :param q: The q of this Summary.  # noqa: E501
        :type q: str
        :param start: The start of this Summary.  # noqa: E501
        :type start: int
        :param limit: The limit of this Summary.  # noqa: E501
        :type limit: int
        :param sort: The sort of this Summary.  # noqa: E501
        :type sort: List[str]
        """
        self.swagger_types = {
            'q': str,
            'start': int,
            'limit': int,
            'sort': List[str]
        }

        self.attribute_map = {
            'q': 'q',
            'start': 'start',
            'limit': 'limit',
            'sort': 'sort'
        }
        self._q = q
        self._start = start
        self._limit = limit
        self._sort = sort

    @classmethod
    def from_dict(cls, dikt) -> 'Summary':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The summary of this Summary.  # noqa: E501
        :rtype: Summary
        """
        return util.deserialize_model(dikt, cls)

    @property
    def q(self) -> str:
        """Gets the q of this Summary.


        :return: The q of this Summary.
        :rtype: str
        """
        return self._q

    @q.setter
    def q(self, q: str):
        """Sets the q of this Summary.


        :param q: The q of this Summary.
        :type q: str
        """

        self._q = q

    @property
    def start(self) -> int:
        """Gets the start of this Summary.


        :return: The start of this Summary.
        :rtype: int
        """
        return self._start

    @start.setter
    def start(self, start: int):
        """Sets the start of this Summary.


        :param start: The start of this Summary.
        :type start: int
        """

        self._start = start

    @property
    def limit(self) -> int:
        """Gets the limit of this Summary.


        :return: The limit of this Summary.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit: int):
        """Sets the limit of this Summary.


        :param limit: The limit of this Summary.
        :type limit: int
        """

        self._limit = limit

    @property
    def sort(self) -> List[str]:
        """Gets the sort of this Summary.


        :return: The sort of this Summary.
        :rtype: List[str]
        """
        return self._sort

    @sort.setter
    def sort(self, sort: List[str]):
        """Sets the sort of this Summary.


        :param sort: The sort of this Summary.
        :type sort: List[str]
        """

        self._sort = sort
